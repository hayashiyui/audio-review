---
import BlogCard from '@/components/BlogCard.astro'
import { getReviewById, getColumnById, getAllReviews, getAllColumns } from '@/lib/data-utils'
import type { CollectionEntry } from 'astro:content'

interface ArticleRef {
  collection: 'reviews' | 'columns'
  id: string
}

interface Props {
  articles: ArticleRef[]
  columns?: 2 | 3 | 4
  title?: string
}

const locale: 'ja' | 'en' = Astro.url.pathname.startsWith('/en/') ? 'en' : 'ja'

const { articles, columns = 3, title = locale === 'en' ? 'Related Articles' : '関連記事' } = Astro.props

const fetchedArticles: (CollectionEntry<'reviews'> | CollectionEntry<'columns'>)[] = []

const allReviews = await getAllReviews()
const allColumns = await getAllColumns()

for (const ref of articles) {
  let article: CollectionEntry<'reviews'> | CollectionEntry<'columns'> | null = null

  if (ref.collection === 'reviews') {
    article = await getReviewById(ref.id)
    // 言語が一致しない場合は対訳を探索
    if (article && (article.data.locale ?? 'ja') !== locale) {
      const byKey = article.data.translationKey
        ? allReviews.find(
            (e) => e.data.translationKey === article!.data.translationKey && (e.data.locale ?? 'ja') === locale,
          )
        : undefined
      const bySuffix = !byKey && locale === 'en'
        ? allReviews.find((e) => e.id === `${ref.id}.en`)
        : undefined
      if (byKey) article = byKey
      else if (bySuffix) article = bySuffix
      else article = null // ロケール不一致のままは表示しない
    }
  } else if (ref.collection === 'columns') {
    article = await getColumnById(ref.id)
    if (article && (article.data.locale ?? 'ja') !== locale) {
      const byKey = article.data.translationKey
        ? allColumns.find(
            (e) => e.data.translationKey === article!.data.translationKey && (e.data.locale ?? 'ja') === locale,
          )
        : undefined
      const bySuffix = !byKey && locale === 'en'
        ? allColumns.find((e) => e.id === `${ref.id}.en`)
        : undefined
      if (byKey) article = byKey
      else if (bySuffix) article = bySuffix
      else article = null
    }
  }

  if (article && !article.data.draft && (article.data.locale ?? 'ja') === locale) {
    fetchedArticles.push(article)
  }
}

const gridCols = {
  2: 'grid-cols-1 sm:grid-cols-2',
  3: 'grid-cols-1 sm:grid-cols-2 lg:grid-cols-3',
  4: 'grid-cols-1 sm:grid-cols-2 lg:grid-cols-4'
}
---

{fetchedArticles.length > 0 && (
  <div class="not-prose w-full my-8 pagefind-exclude">
    {title && (
      <h3 class="text-lg font-semibold mb-4">{title}</h3>
    )}
    <div class={`grid ${gridCols[columns]} gap-6`}>
      {fetchedArticles.map((article) => (
        <BlogCard entry={article} />
      ))}
    </div>
  </div>
)}
